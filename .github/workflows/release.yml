name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    env:
      PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: "3.11"

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}

      - name: Install dependencies
        run: uv sync --dev

      - name: Run tests
        run: uv run pytest

      - name: Build package
        run: uv build

      - name: Install release tooling
        run: python -m pip install keepachangelog tomlkit

      - name: Extract metadata
        id: metadata
        env:
          PYPI_TOKEN: ${{ env.PYPI_TOKEN }}
        run: python .github/scripts/extract_metadata.py

      - name: Publish to PyPI
        if: env.PYPI_TOKEN != '' && steps.metadata.outcome == 'success'
        env:
          UV_PUBLISH_TOKEN: ${{ env.PYPI_TOKEN }}
        run: uv publish --token "$UV_PUBLISH_TOKEN"

      - name: Extract current version release notes
        run: |
          python .github/scripts/extract_release_notes.py \
            --version "${{ steps.metadata.outputs.version }}" \
            --output .github/current_release_notes.md

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.metadata.outputs.version }}
          name: v${{ steps.metadata.outputs.version }}
          body_path: .github/current_release_notes.md
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up release notes
        if: always()
        run: rm -f .github/current_release_notes.md
